//Course Registration DataBase
import java.util.ArrayList;
import java.util.Scanner;

class Course {
    private String courseName;
    private String courseCode;

    public Course(String courseName, String courseCode) {
        this.courseName = courseName;
        this.courseCode = courseCode;
    }

    public String getCourseName() {
        return courseName;
    }

    public String getCourseCode() {
        return courseCode;
    }

    @Override
    public String toString() {
        return courseCode + " - " + courseName;
    }
}

class Student {
    private String studentName;
    private ArrayList<Course> registeredCourses;

    public Student(String studentName) {
        this.studentName = studentName;
        this.registeredCourses = new ArrayList<>();
    }

    public void registerCourse(Course course) {
        registeredCourses.add(course);
        System.out.println("Successfully registered for " + course.getCourseName());
    }

    public void viewRegisteredCourses() {
        if (registeredCourses.isEmpty()) {
            System.out.println("No courses registered.");
        } else {
            System.out.println("Registered Courses:");
            for (Course course : registeredCourses) {
                System.out.println(course);
            }
        }
    }

    public String getStudentName() {
        return studentName;
    }
}

class CourseRegistrationSystem {
    private ArrayList<Course> availableCourses;
    private ArrayList<Student> students;

    public CourseRegistrationSystem() {
        availableCourses = new ArrayList<>();
        students = new ArrayList<>();
    }

    public void addCourse(Course course) {
        availableCourses.add(course);
    }

    public void addStudent(Student student) {
        students.add(student);
    }

    public Student findStudent(String studentName) {
        for (Student student : students) {
            if (student.getStudentName().equalsIgnoreCase(studentName)) {
                return student;
            }
        }
        return null;
    }

    public void viewAvailableCourses() {
        if (availableCourses.isEmpty()) {
            System.out.println("No available courses.");
        } else {
            System.out.println("Available Courses:");
            for (Course course : availableCourses) {
                System.out.println(course);
            }
        }
    }

    public Course findCourse(String courseCode) {
        for (Course course : availableCourses) {
            if (course.getCourseCode().equalsIgnoreCase(courseCode)) {
                return course;
            }
        }
        return null;
    }
}

public class Main {
    public static void main(String[] args) {
        CourseRegistrationSystem system = new CourseRegistrationSystem();

        // Add some courses to the system
        system.addCourse(new Course("Introduction to Programming", "CS101"));
        system.addCourse(new Course("Data Structures", "CS102"));
        system.addCourse(new Course("Operating Systems", "CS103"));

        // Add a student to the system
        system.addStudent(new Student("John Doe"));

        Scanner scanner = new Scanner(System.in);
        while (true) {
            System.out.println("\nCourse Registration System");
            System.out.println("1. View Available Courses");
            System.out.println("2. Register for a Course");
            System.out.println("3. View Registered Courses");
            System.out.println("4. Exit");
            System.out.print("Choose an option: ");
            int choice = scanner.nextInt();
            scanner.nextLine();  // Consume newline

            switch (choice) {
                case 1:
                    system.viewAvailableCourses();
                    break;
                case 2:
                    System.out.print("Enter your name: ");
                    String studentName = scanner.nextLine();
                    Student student = system.findStudent(studentName);
                    if (student == null) {
                        System.out.println("Student not found.");
                    } else {
                        System.out.print("Enter course code to register: ");
                        String courseCode = scanner.nextLine();
                        Course course = system.findCourse(courseCode);
                        if (course == null) {
                            System.out.println("Course not found.");
                        } else {
                            student.registerCourse(course);
                        }
                    }
                    break;
                case 3:
                    System.out.print("Enter your name: ");
                    studentName = scanner.nextLine();
                    student = system.findStudent(studentName);
                    if (student == null) {
                        System.out.println("Student not found.");
                    } else {
                        student.viewRegisteredCourses();
                    }
                    break;
                case 4:
                    System.out.println("Exiting...");
                    scanner.close();
                    return;
                default:
                    System.out.println("Invalid option. Try again.");
            }
        }
    }
}
